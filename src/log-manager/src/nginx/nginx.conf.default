# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


server {
  listen      80;
  server_name localhost;
  client_max_body_size 0; # Disable checking of client request body size.
  client_body_buffer_size 256M;
  proxy_connect_timeout 60m;
  proxy_send_timeout 60m;
  proxy_read_timeout 60m;
  send_timeout 60m;

  #
  # Health check
  #
  location = /healthz {
    default_type text/plain;
    return 200 "Log manager ready.";
  }

  # 
  # Get log list
  #
  location /api/v1/logs {
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET';
    limit_except GET {
      deny all;
    }
    default_type application/json;
    access_by_lua_block {
      local guard = require "guard"
      guard.check_token()
    }
    content_by_lua_file /etc/nginx/lua/list_logs.lua;
  }

  #
  # Get the token
  #
  location /api/v1/tokens {
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'POST';
    limit_except POST {
      deny all;
    }
    default_type application/json;
    content_by_lua_file /etc/nginx/lua/token.lua;
  }

  #
  # Get full/tail log
  #
  location ~ ^/api/v1/logs/(.*)$ {
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET';
    add_header Content-Disposition 'attachment';
    limit_except GET {
      deny all;
    }
    default_type text/plain;
    limit_rate_after 1m;
    limit_rate 1m;

    rewrite_by_lua_file /etc/nginx/lua/get_log_content.lua;
  }

  location ~ /~/(.*)$ {
    internal;
    add_header Accept-Ranges bytes;
    add_header Access-Control-Allow-Origin *;
    rewrite ^/~/(.*)$ $1 break;

    root /usr/local/pai/logs/;
  }
}

