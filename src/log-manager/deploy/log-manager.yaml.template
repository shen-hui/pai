# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: log-manager-ds
spec:
  selector:
    matchLabels:
      app: log-manager
  template:
    metadata:
      name: log-manager
      labels:
        app: log-manager
      annotations:
        port: "{{ cluster_cfg["log-manager"]["port"] }}"
    spec:
      priorityClassName: pai-daemon-priority
      hostNetwork: false
      containers:
      - name: log-cleaner
        image: {{ cluster_cfg["cluster"]["docker-registry"]["prefix"] }}log-manager-cleaner:{{ cluster_cfg["cluster"]["docker-registry"]["tag"] }}
        imagePullPolicy: Always
        volumeMounts:
        - name: pai-log
          mountPath: /usr/local/pai/logs
        {%- if cluster_cfg['cluster']['common']['qos-switch'] == "true" %}
        resources:
          limits:
            cpu: 0.5
            memory: "512Mi"
          requests:
            cpu: 0
            memory: "128Mi"
        {%- endif %}
      - name: log-manager-nginx
        image: {{ cluster_cfg["cluster"]["docker-registry"]["prefix"] }}log-manager-nginx:{{ cluster_cfg["cluster"]["docker-registry"]["tag"] }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: '/healthz'
            port: log-manager
          initialDelaySeconds: 10
          periodSeconds: 60
        volumeMounts:
        - name: pai-log
          mountPath: /usr/local/pai/logs
        ports:
        - containerPort: 80
          hostPort: {{ cluster_cfg["log-manager"]["port"] }}
          name: log-manager
        {%- if cluster_cfg['cluster']['common']['qos-switch'] == "true" %}
        resources:
          limits:
            cpu: 0.5
            memory: "512Mi"
          requests:
            cpu: 0
            memory: "128Mi"
        {%- endif %}
        env:
        - name: ADMIN_NAME
          value: {{ cluster_cfg["log-manager"]["admin_name"] }}
        - name: ADMIN_PASSWORD
          value: {{ cluster_cfg["log-manager"]["admin_password"] }}
        - name: JWT_SECRET
          value: {{ cluster_cfg["log-manager"]["jwt_secret"] }}
        - name: TOKEN_EXPIRED_SECOND
          value: '{{ cluster_cfg["log-manager"]["token_expired_second"] }}'
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
        - name: pai-log
          hostPath:
            path: /var/log/pai
      imagePullSecrets:
      - name: {{ cluster_cfg["cluster"]["docker-registry"]["secret-name"] }}
      tolerations:
      - key: node.kubernetes.io/memory-pressure
        operator: "Exists"
      - key: node.kubernetes.io/disk-pressure
        operator: "Exists"
