# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: postgresql-ds
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      name: postgresql
      labels:
        app: postgresql
    spec:
      hostNetwork: true
      containers:
      - name: postgresql
        image: {{ cluster_cfg["cluster"]["docker-registry"]["prefix"] }}postgresql:{{ cluster_cfg["cluster"]["docker-registry"]["tag"] }}
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USER
          value: {{ cluster_cfg["postgresql"]["user"] }}
        - name: POSTGRES_PASSWORD
          value: {{ cluster_cfg["postgresql"]["passwd"] }}
        - name: POSTGRES_DB
          value: {{ cluster_cfg["postgresql"]["db"] }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        args: ['-c', 'port={{- cluster_cfg["postgresql"]["port"] }}', '-N', '{{ cluster_cfg["postgresql"]["max-connection"] }}']
        volumeMounts:
        - name: internal-data-dir
          mountPath: /var/lib/postgresql/data/
          mountPropagation: "None"
      - name: postgresql-init-client
        image: {{ cluster_cfg["cluster"]["docker-registry"]["prefix"] }}postgresql-init-client:{{ cluster_cfg["cluster"]["docker-registry"]["tag"] }}
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USER
          value: {{ cluster_cfg["postgresql"]["user"] }}
        - name: PGPASSWORD
          value: {{ cluster_cfg["postgresql"]["passwd"] }}
        - name: POSTGRES_DB
          value: {{ cluster_cfg["postgresql"]["db"] }}
        - name: POSTGRES_PORT
          value: '{{ cluster_cfg["postgresql"]["port"] }}'
        readinessProbe:
          exec:
            command:
            - '/bin/bash'
            - '/postgresql_init/init_table.sh'
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
        - name: internal-data-dir
          hostPath:
            path: '{{ cluster_cfg["internal-storage"]["root-path"] }}/storage'
      imagePullSecrets:
      - name: {{ cluster_cfg["cluster"]["docker-registry"]["secret-name"] }}
