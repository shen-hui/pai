<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>

  <property>
    <name>yarn.scheduler.capacity.resource-calculator</name>
    <!--
      TODO: Change to GPU Resource Calculator after PAI has deployed Hadoop-AI
      <value>org.apache.hadoop.yarn.api.records.Resource.GPUResourceCalculator</value>
      <description>
        Calculate resources using GPU only. This is a feature of Hadoop-AI.
      </description>
    -->
    <value>org.apache.hadoop.yarn.util.resource.DominantResourceCalculator</value>
    <description>
      The ResourceCalculator implementation to be used to compare
      Resources in the scheduler.
      The default i.e. DefaultResourceCalculator only uses Memory while
      DominantResourceCalculator uses dominant-resource to compare
      multi-dimensional resources such as Memory, CPU etc.
    </description>
  </property>

  <property>
     <name>yarn.scheduler.capacity.maximum-am-resource-percent</name>
     <value>0.5</value>
  </property>

  <property>
     <name>yarn.scheduler.capacity.maximum-applications</name>
     <value>10000</value>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.queues</name>
    <value>
      {{ cluster_cfg[ "hadoop-resource-manager" ][ "hadoopQueues" ]|join(", ") }}
    </value>
    <description>
      The queues at the this level (root is the root queue).
    </description>
  </property>

{% for queueName in cluster_cfg[ "hadoop-resource-manager" ][ "hadoopQueues" ] %}
  <property>
    <name>yarn.scheduler.capacity.root.{{ queueName }}.capacity</name>
    <value>{{ cluster_cfg[ "hadoop-resource-manager" ][ "hadoopQueues" ][queueName]["weight"] }}</value>
    <description>
      {{ cluster_cfg[ "hadoop-resource-manager" ][ "hadoopQueues" ][queueName]["description"] }}
    </description>
  </property>

  <!-- Disable bonus token -->
  <property>
    <name>yarn.scheduler.capacity.root.{{ queueName }}.maximum-capacity</name>
    <value>{{ cluster_cfg[ "hadoop-resource-manager" ][ "hadoopQueues" ][queueName]["weight"] }}</value>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.{{ queueName }}.user-limit-factor</name>
    <value>100</value>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.{{ queueName }}.minimum-user-limit-percent</name>
    <value>100</value>
  </property>
{% endfor %}

</configuration>
