#!/bin/bash

# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

pushd $(dirname "$0") > /dev/null

# crate configmap for alert-templates
{% if cluster_cfg["alert-manager"]["alert-handler"]["configured"] -%}
{% if 'email-admin' in cluster_cfg["alert-manager"]["actions-available"] -%}
kubectl create configmap alert-templates \
{% for template in cluster_cfg["alert-manager"]["alert-handler"]["email-configs"]["templates"] -%}
--from-file={{ template }}-html.ejs=alert-templates/{{ template }}/html.ejs \
--from-file={{ template }}-subject.ejs=alert-templates/{{ template }}/subject.ejs \
{% endfor -%}
--dry-run -o yaml | kubectl apply --overwrite=true -f - || exit $?
{% endif -%}
{% endif -%}

kubectl apply --overwrite=true -f rbac.yaml || exit $?
kubectl apply --overwrite=true -f alert-manager-configmap.yaml || exit $?
kubectl apply --overwrite=true -f alert-manager-deployment.yaml || exit $?

sleep 10
# wait until the service is ready.
PYTHONPATH="../../../deployment" python -m  k8sPaiLibrary.monitorTool.check_pod_ready_status -w -k app -v alertmanager || exit $?

popd > /dev/null
